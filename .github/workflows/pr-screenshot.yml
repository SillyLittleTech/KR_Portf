
name: e2e-screenshot
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  e2e:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build site
        run: npm run build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests (takes screenshot)
        run: npm run test:e2e

      - name: Upload screenshot
        uses: actions/upload-artifact@v4
        with:
          name: portfolio-screenshot
          path: |
            playwright-logs/portfolio-working.png
            playwright-report/**
          if-no-files-found: warn

      - name: Comment on PR with screenshot
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Automated Playwright Screenshot**
            
            ![Portfolio Screenshot](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/portfolio-screenshot/playwright-logs/portfolio-working.png)

      - name: Mark old screenshot comments as outdated
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v3
        id: find_comments
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'Automated Playwright Screenshot'

      - name: Outdate previous screenshot comments
        if: steps.find_comments.outputs.comment-ids != ''
        run: |
          for id in ${{ steps.find_comments.outputs.comment-ids }}; do
            gh pr comment ${{ github.event.pull_request.number }} --comment-id $id --body "[OUTDATED]"
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
