name: cleanup-sonar-comments

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  pull-requests: write
  issues: write

jobs:
  tidy:
    runs-on: ubuntu-latest
    steps:
      - name: Collapse outdated SonarQube bot comments
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const issueNumber = context.issue.number;

            const comments = (await github.paginate(github.rest.issues.listComments, {
              owner,
              repo,
              issue_number: issueNumber,
              per_page: 100,
            })).filter((comment) => comment.user?.login === 'sonarqubecloud[bot]');

            if (comments.length <= 1) {
              core.info('Zero or one SonarQube comment found. Nothing to collapse.');
              return;
            }

            comments.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
            const [latest, ...older] = comments;

            const minimize = async (nodeId) => {
              const mutation = `mutation($id: ID!) {
                minimizeComment(input: {subjectId: $id, classifier: OUTDATED}) {
                  minimizedComment { isMinimized }
                }
              }`;

              await github.graphql(mutation, { id: nodeId });
            };

            const unminimize = async (nodeId) => {
              const mutation = `mutation($id: ID!) {
                unminimizeComment(input: {subjectId: $id}) {
                  unminimizedComment { isMinimized }
                }
              }`;

              await github.graphql(mutation, { id: nodeId });
            };

            try {
              await unminimize(latest.node_id);
              core.info(`Ensured latest SonarQube comment (${latest.id}) is visible.`);
            } catch (error) {
              core.warning(`Failed to unminimize latest comment ${latest.id}: ${error.message}`);
            }

            for (const comment of older) {
              try {
                await minimize(comment.node_id);
                core.info(`Minimized SonarQube comment ${comment.id}.`);
              } catch (error) {
                core.warning(`Failed to minimize comment ${comment.id}: ${error.message}`);
              }
            }
